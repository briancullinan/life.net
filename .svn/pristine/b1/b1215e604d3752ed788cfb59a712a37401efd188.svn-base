#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Research
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Life")]
	public partial class DatalayerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertResearch(Research instance);
    partial void UpdateResearch(Research instance);
    partial void DeleteResearch(Research instance);
    #endregion
		
		public DatalayerDataContext() :
        base(global::Life.Properties.Settings.Default.LifeFile, mappingSource)
		{
			OnCreated();
		}
		
		public DatalayerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalayerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalayerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalayerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Research> Researches
		{
			get
			{
				return this.GetTable<Research>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Research")]
	public partial class Research : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Address;
		
		private string _FullHtml;
		
		private string _InterestingHtml;
		
		private string _TextOnly;
		
		private string _Title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnFullHtmlChanging(string value);
    partial void OnFullHtmlChanged();
    partial void OnInterestingHtmlChanging(string value);
    partial void OnInterestingHtmlChanged();
    partial void OnTextOnlyChanging(string value);
    partial void OnTextOnlyChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public Research()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(512) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullHtml", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string FullHtml
		{
			get
			{
				return this._FullHtml;
			}
			set
			{
				if ((this._FullHtml != value))
				{
					this.OnFullHtmlChanging(value);
					this.SendPropertyChanging();
					this._FullHtml = value;
					this.SendPropertyChanged("FullHtml");
					this.OnFullHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestingHtml", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string InterestingHtml
		{
			get
			{
				return this._InterestingHtml;
			}
			set
			{
				if ((this._InterestingHtml != value))
				{
					this.OnInterestingHtmlChanging(value);
					this.SendPropertyChanging();
					this._InterestingHtml = value;
					this.SendPropertyChanged("InterestingHtml");
					this.OnInterestingHtmlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextOnly", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TextOnly
		{
			get
			{
				return this._TextOnly;
			}
			set
			{
				if ((this._TextOnly != value))
				{
					this.OnTextOnlyChanging(value);
					this.SendPropertyChanging();
					this._TextOnly = value;
					this.SendPropertyChanged("TextOnly");
					this.OnTextOnlyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
