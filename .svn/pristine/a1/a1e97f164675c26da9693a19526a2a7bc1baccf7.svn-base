using System;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.Linq;
using System.Windows;
using System.Windows.Controls;

namespace Life.Triggers
{
    public class Searched : Utilities.Trigger
    {
        public Searched(Trigger trigger) : base(trigger)
        {
            ((MainWindow) System.Windows.Application.Current.MainWindow).Search.Click += SearchOnClick;
            AddTriggerResult(App.Activities);
            App.Activities.CollectionChanged += (sender, args) =>
                {
                    if(args.NewItems != null)
                        AddTriggerResult(args.NewItems.OfType<Utilities.Activity>());
                };
        }

        private void AddTriggerResult(IEnumerable<Utilities.Activity> activites)
        {
            foreach (var activity in activites)
                if (activity.Entity.ActivityTriggers.Any(x => x.TriggerId == Entity.Id))
                    activity.Resulted += ActivityOnResulted;
        }

        private void ActivityOnResulted(Utilities.Activity activity, object result)
        {
            
        }

        private void SearchOnClick(object sender, RoutedEventArgs routedEventArgs)
        {
            var text = ((MainWindow) System.Windows.Application.Current.MainWindow).SearchText.Text;
            ((MainWindow) System.Windows.Application.Current.MainWindow).Tabs.Children.Add(new RadioButton
                {
                    Content = string.Format("Search results for: {0}", text),
                    GroupName = "Display"
                });
            OnTriggered(text);
        }
    }
}
