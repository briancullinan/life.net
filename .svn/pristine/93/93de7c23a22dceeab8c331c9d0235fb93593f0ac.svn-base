#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Facebook
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Life")]
	public partial class DatalayerDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertFacebookPlace(FacebookPlace instance);
    partial void UpdateFacebookPlace(FacebookPlace instance);
    partial void DeleteFacebookPlace(FacebookPlace instance);
    partial void InsertFacebookAlbum(FacebookAlbum instance);
    partial void UpdateFacebookAlbum(FacebookAlbum instance);
    partial void DeleteFacebookAlbum(FacebookAlbum instance);
    partial void InsertFacebookContact(FacebookContact instance);
    partial void UpdateFacebookContact(FacebookContact instance);
    partial void DeleteFacebookContact(FacebookContact instance);
    partial void InsertFacebookEvent(FacebookEvent instance);
    partial void UpdateFacebookEvent(FacebookEvent instance);
    partial void DeleteFacebookEvent(FacebookEvent instance);
    partial void InsertFacebookPhoto(FacebookPhoto instance);
    partial void UpdateFacebookPhoto(FacebookPhoto instance);
    partial void DeleteFacebookPhoto(FacebookPhoto instance);
    #endregion
		
		public DatalayerDataContext() : 
				base(global::Life.Properties.Settings.Default.LifeFile, mappingSource)
		{
			OnCreated();
		}
		
		public DatalayerDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalayerDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalayerDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DatalayerDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<FacebookPlace> FacebookPlaces
		{
			get
			{
				return this.GetTable<FacebookPlace>();
			}
		}
		
		public System.Data.Linq.Table<FacebookAlbum> FacebookAlbums
		{
			get
			{
				return this.GetTable<FacebookAlbum>();
			}
		}
		
		public System.Data.Linq.Table<FacebookContact> FacebookContacts
		{
			get
			{
				return this.GetTable<FacebookContact>();
			}
		}
		
		public System.Data.Linq.Table<FacebookEvent> FacebookEvents
		{
			get
			{
				return this.GetTable<FacebookEvent>();
			}
		}
		
		public System.Data.Linq.Table<FacebookPhoto> FacebookPhotos
		{
			get
			{
				return this.GetTable<FacebookPhoto>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacebookPlace")]
	public partial class FacebookPlace : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Street;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Country;
		
		private double _Latitude;
		
		private double _Longitude;
		
		private EntitySet<FacebookContact> _FacebookContacts;
		
		private EntitySet<FacebookEvent> _FacebookEvents;
		
		private EntitySet<FacebookPhoto> _FacebookPhotos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnCountryChanging(string value);
    partial void OnCountryChanged();
    partial void OnLatitudeChanging(double value);
    partial void OnLatitudeChanged();
    partial void OnLongitudeChanging(double value);
    partial void OnLongitudeChanged();
    #endregion
		
		public FacebookPlace()
		{
			this._FacebookContacts = new EntitySet<FacebookContact>(new Action<FacebookContact>(this.attach_FacebookContacts), new Action<FacebookContact>(this.detach_FacebookContacts));
			this._FacebookEvents = new EntitySet<FacebookEvent>(new Action<FacebookEvent>(this.attach_FacebookEvents), new Action<FacebookEvent>(this.detach_FacebookEvents));
			this._FacebookPhotos = new EntitySet<FacebookPhoto>(new Action<FacebookPhoto>(this.attach_FacebookPhotos), new Action<FacebookPhoto>(this.detach_FacebookPhotos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="VarChar(256)")]
		public string Street
		{
			get
			{
				return this._Street;
			}
			set
			{
				if ((this._Street != value))
				{
					this.OnStreetChanging(value);
					this.SendPropertyChanging();
					this._Street = value;
					this.SendPropertyChanged("Street");
					this.OnStreetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(50)")]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(50)")]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(20)")]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Country", DbType="VarChar(50)")]
		public string Country
		{
			get
			{
				return this._Country;
			}
			set
			{
				if ((this._Country != value))
				{
					this.OnCountryChanging(value);
					this.SendPropertyChanging();
					this._Country = value;
					this.SendPropertyChanged("Country");
					this.OnCountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Latitude", DbType="Float NOT NULL")]
		public double Latitude
		{
			get
			{
				return this._Latitude;
			}
			set
			{
				if ((this._Latitude != value))
				{
					this.OnLatitudeChanging(value);
					this.SendPropertyChanging();
					this._Latitude = value;
					this.SendPropertyChanged("Latitude");
					this.OnLatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Longitude", DbType="Float NOT NULL")]
		public double Longitude
		{
			get
			{
				return this._Longitude;
			}
			set
			{
				if ((this._Longitude != value))
				{
					this.OnLongitudeChanging(value);
					this.SendPropertyChanging();
					this._Longitude = value;
					this.SendPropertyChanged("Longitude");
					this.OnLongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookPlace_FacebookContact", Storage="_FacebookContacts", ThisKey="Id", OtherKey="Location")]
		public EntitySet<FacebookContact> FacebookContacts
		{
			get
			{
				return this._FacebookContacts;
			}
			set
			{
				this._FacebookContacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookPlace_FacebookEvent", Storage="_FacebookEvents", ThisKey="Id", OtherKey="Place")]
		public EntitySet<FacebookEvent> FacebookEvents
		{
			get
			{
				return this._FacebookEvents;
			}
			set
			{
				this._FacebookEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookPlace_FacebookPhoto", Storage="_FacebookPhotos", ThisKey="Id", OtherKey="Location")]
		public EntitySet<FacebookPhoto> FacebookPhotos
		{
			get
			{
				return this._FacebookPhotos;
			}
			set
			{
				this._FacebookPhotos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacebookContacts(FacebookContact entity)
		{
			this.SendPropertyChanging();
			entity.FacebookPlace = this;
		}
		
		private void detach_FacebookContacts(FacebookContact entity)
		{
			this.SendPropertyChanging();
			entity.FacebookPlace = null;
		}
		
		private void attach_FacebookEvents(FacebookEvent entity)
		{
			this.SendPropertyChanging();
			entity.FacebookPlace = this;
		}
		
		private void detach_FacebookEvents(FacebookEvent entity)
		{
			this.SendPropertyChanging();
			entity.FacebookPlace = null;
		}
		
		private void attach_FacebookPhotos(FacebookPhoto entity)
		{
			this.SendPropertyChanging();
			entity.FacebookPlace = this;
		}
		
		private void detach_FacebookPhotos(FacebookPhoto entity)
		{
			this.SendPropertyChanging();
			entity.FacebookPlace = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacebookAlbum")]
	public partial class FacebookAlbum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Description;
		
		private System.DateTime _TimeCreated;
		
		private System.Nullable<System.DateTime> _TimeUpdated;
		
		private System.Nullable<long> _Contact;
		
		private string _Type;
		
		private System.Nullable<long> _Cover;
		
		private EntitySet<FacebookPhoto> _FacebookPhotos;
		
		private EntityRef<FacebookContact> _FacebookContact;
		
		private EntityRef<FacebookPhoto> _FacebookPhoto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTimeCreatedChanging(System.DateTime value);
    partial void OnTimeCreatedChanged();
    partial void OnTimeUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeUpdatedChanged();
    partial void OnContactChanging(System.Nullable<long> value);
    partial void OnContactChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnCoverChanging(System.Nullable<long> value);
    partial void OnCoverChanged();
    #endregion
		
		public FacebookAlbum()
		{
			this._FacebookPhotos = new EntitySet<FacebookPhoto>(new Action<FacebookPhoto>(this.attach_FacebookPhotos), new Action<FacebookPhoto>(this.detach_FacebookPhotos));
			this._FacebookContact = default(EntityRef<FacebookContact>);
			this._FacebookPhoto = default(EntityRef<FacebookPhoto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCreated", DbType="DateTime NOT NULL")]
		public System.DateTime TimeCreated
		{
			get
			{
				return this._TimeCreated;
			}
			set
			{
				if ((this._TimeCreated != value))
				{
					this.OnTimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._TimeCreated = value;
					this.SendPropertyChanged("TimeCreated");
					this.OnTimeCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeUpdated
		{
			get
			{
				return this._TimeUpdated;
			}
			set
			{
				if ((this._TimeUpdated != value))
				{
					this.OnTimeUpdatedChanging(value);
					this.SendPropertyChanging();
					this._TimeUpdated = value;
					this.SendPropertyChanged("TimeUpdated");
					this.OnTimeUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="BigInt")]
		public System.Nullable<long> Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					if (this._FacebookContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cover", DbType="BigInt")]
		public System.Nullable<long> Cover
		{
			get
			{
				return this._Cover;
			}
			set
			{
				if ((this._Cover != value))
				{
					if (this._FacebookPhoto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCoverChanging(value);
					this.SendPropertyChanging();
					this._Cover = value;
					this.SendPropertyChanged("Cover");
					this.OnCoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookAlbum_FacebookPhoto", Storage="_FacebookPhotos", ThisKey="Id", OtherKey="Album")]
		public EntitySet<FacebookPhoto> FacebookPhotos
		{
			get
			{
				return this._FacebookPhotos;
			}
			set
			{
				this._FacebookPhotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookContact_FacebookAlbum", Storage="_FacebookContact", ThisKey="Contact", OtherKey="Id", IsForeignKey=true)]
		public FacebookContact FacebookContact
		{
			get
			{
				return this._FacebookContact.Entity;
			}
			set
			{
				FacebookContact previousValue = this._FacebookContact.Entity;
				if (((previousValue != value) 
							|| (this._FacebookContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacebookContact.Entity = null;
						previousValue.FacebookAlbums.Remove(this);
					}
					this._FacebookContact.Entity = value;
					if ((value != null))
					{
						value.FacebookAlbums.Add(this);
						this._Contact = value.Id;
					}
					else
					{
						this._Contact = default(Nullable<long>);
					}
					this.SendPropertyChanged("FacebookContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookPhoto_FacebookAlbum", Storage="_FacebookPhoto", ThisKey="Cover", OtherKey="Id", IsForeignKey=true)]
		public FacebookPhoto FacebookPhoto
		{
			get
			{
				return this._FacebookPhoto.Entity;
			}
			set
			{
				FacebookPhoto previousValue = this._FacebookPhoto.Entity;
				if (((previousValue != value) 
							|| (this._FacebookPhoto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacebookPhoto.Entity = null;
						previousValue.FacebookAlbums.Remove(this);
					}
					this._FacebookPhoto.Entity = value;
					if ((value != null))
					{
						value.FacebookAlbums.Add(this);
						this._Cover = value.Id;
					}
					else
					{
						this._Cover = default(Nullable<long>);
					}
					this.SendPropertyChanged("FacebookPhoto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacebookPhotos(FacebookPhoto entity)
		{
			this.SendPropertyChanging();
			entity.FacebookAlbum = this;
		}
		
		private void detach_FacebookPhotos(FacebookPhoto entity)
		{
			this.SendPropertyChanging();
			entity.FacebookAlbum = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacebookContact")]
	public partial class FacebookContact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private string _Username;
		
		private System.Nullable<System.DateTime> _Birthday;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private string _Gender;
		
		private System.Nullable<long> _Location;
		
		private EntitySet<FacebookAlbum> _FacebookAlbums;
		
		private EntitySet<FacebookEvent> _FacebookEvents;
		
		private EntitySet<FacebookPhoto> _FacebookPhotos;
		
		private EntityRef<FacebookPlace> _FacebookPlace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnBirthdayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthdayChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnLocationChanging(System.Nullable<long> value);
    partial void OnLocationChanged();
    #endregion
		
		public FacebookContact()
		{
			this._FacebookAlbums = new EntitySet<FacebookAlbum>(new Action<FacebookAlbum>(this.attach_FacebookAlbums), new Action<FacebookAlbum>(this.detach_FacebookAlbums));
			this._FacebookEvents = new EntitySet<FacebookEvent>(new Action<FacebookEvent>(this.attach_FacebookEvents), new Action<FacebookEvent>(this.detach_FacebookEvents));
			this._FacebookPhotos = new EntitySet<FacebookPhoto>(new Action<FacebookPhoto>(this.attach_FacebookPhotos), new Action<FacebookPhoto>(this.detach_FacebookPhotos));
			this._FacebookPlace = default(EntityRef<FacebookPlace>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Birthday", DbType="DateTime")]
		public System.Nullable<System.DateTime> Birthday
		{
			get
			{
				return this._Birthday;
			}
			set
			{
				if ((this._Birthday != value))
				{
					this.OnBirthdayChanging(value);
					this.SendPropertyChanging();
					this._Birthday = value;
					this.SendPropertyChanged("Birthday");
					this.OnBirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(1)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="BigInt")]
		public System.Nullable<long> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					if (this._FacebookPlace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookContact_FacebookAlbum", Storage="_FacebookAlbums", ThisKey="Id", OtherKey="Contact")]
		public EntitySet<FacebookAlbum> FacebookAlbums
		{
			get
			{
				return this._FacebookAlbums;
			}
			set
			{
				this._FacebookAlbums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookContact_FacebookEvent", Storage="_FacebookEvents", ThisKey="Id", OtherKey="Contact")]
		public EntitySet<FacebookEvent> FacebookEvents
		{
			get
			{
				return this._FacebookEvents;
			}
			set
			{
				this._FacebookEvents.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookContact_FacebookPhoto", Storage="_FacebookPhotos", ThisKey="Id", OtherKey="Contact")]
		public EntitySet<FacebookPhoto> FacebookPhotos
		{
			get
			{
				return this._FacebookPhotos;
			}
			set
			{
				this._FacebookPhotos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookPlace_FacebookContact", Storage="_FacebookPlace", ThisKey="Location", OtherKey="Id", IsForeignKey=true)]
		public FacebookPlace FacebookPlace
		{
			get
			{
				return this._FacebookPlace.Entity;
			}
			set
			{
				FacebookPlace previousValue = this._FacebookPlace.Entity;
				if (((previousValue != value) 
							|| (this._FacebookPlace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacebookPlace.Entity = null;
						previousValue.FacebookContacts.Remove(this);
					}
					this._FacebookPlace.Entity = value;
					if ((value != null))
					{
						value.FacebookContacts.Add(this);
						this._Location = value.Id;
					}
					else
					{
						this._Location = default(Nullable<long>);
					}
					this.SendPropertyChanged("FacebookPlace");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacebookAlbums(FacebookAlbum entity)
		{
			this.SendPropertyChanging();
			entity.FacebookContact = this;
		}
		
		private void detach_FacebookAlbums(FacebookAlbum entity)
		{
			this.SendPropertyChanging();
			entity.FacebookContact = null;
		}
		
		private void attach_FacebookEvents(FacebookEvent entity)
		{
			this.SendPropertyChanging();
			entity.FacebookContact = this;
		}
		
		private void detach_FacebookEvents(FacebookEvent entity)
		{
			this.SendPropertyChanging();
			entity.FacebookContact = null;
		}
		
		private void attach_FacebookPhotos(FacebookPhoto entity)
		{
			this.SendPropertyChanging();
			entity.FacebookContact = this;
		}
		
		private void detach_FacebookPhotos(FacebookPhoto entity)
		{
			this.SendPropertyChanging();
			entity.FacebookContact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacebookEvent")]
	public partial class FacebookEvent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private System.Nullable<long> _Contact;
		
		private System.DateTime _TimeStart;
		
		private System.DateTime _TimeEnd;
		
		private System.DateTime _TimeUpdated;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<long> _Place;
		
		private EntityRef<FacebookContact> _FacebookContact;
		
		private EntityRef<FacebookPlace> _FacebookPlace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnContactChanging(System.Nullable<long> value);
    partial void OnContactChanged();
    partial void OnTimeStartChanging(System.DateTime value);
    partial void OnTimeStartChanged();
    partial void OnTimeEndChanging(System.DateTime value);
    partial void OnTimeEndChanged();
    partial void OnTimeUpdatedChanging(System.DateTime value);
    partial void OnTimeUpdatedChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPlaceChanging(System.Nullable<long> value);
    partial void OnPlaceChanged();
    #endregion
		
		public FacebookEvent()
		{
			this._FacebookContact = default(EntityRef<FacebookContact>);
			this._FacebookPlace = default(EntityRef<FacebookPlace>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="BigInt")]
		public System.Nullable<long> Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					if (this._FacebookContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="DateTime NOT NULL")]
		public System.DateTime TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="DateTime NOT NULL")]
		public System.DateTime TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeUpdated", DbType="DateTime NOT NULL")]
		public System.DateTime TimeUpdated
		{
			get
			{
				return this._TimeUpdated;
			}
			set
			{
				if ((this._TimeUpdated != value))
				{
					this.OnTimeUpdatedChanging(value);
					this.SendPropertyChanging();
					this._TimeUpdated = value;
					this.SendPropertyChanged("TimeUpdated");
					this.OnTimeUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(256) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Place", DbType="BigInt")]
		public System.Nullable<long> Place
		{
			get
			{
				return this._Place;
			}
			set
			{
				if ((this._Place != value))
				{
					if (this._FacebookPlace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPlaceChanging(value);
					this.SendPropertyChanging();
					this._Place = value;
					this.SendPropertyChanged("Place");
					this.OnPlaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookContact_FacebookEvent", Storage="_FacebookContact", ThisKey="Contact", OtherKey="Id", IsForeignKey=true)]
		public FacebookContact FacebookContact
		{
			get
			{
				return this._FacebookContact.Entity;
			}
			set
			{
				FacebookContact previousValue = this._FacebookContact.Entity;
				if (((previousValue != value) 
							|| (this._FacebookContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacebookContact.Entity = null;
						previousValue.FacebookEvents.Remove(this);
					}
					this._FacebookContact.Entity = value;
					if ((value != null))
					{
						value.FacebookEvents.Add(this);
						this._Contact = value.Id;
					}
					else
					{
						this._Contact = default(Nullable<long>);
					}
					this.SendPropertyChanged("FacebookContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookPlace_FacebookEvent", Storage="_FacebookPlace", ThisKey="Place", OtherKey="Id", IsForeignKey=true)]
		public FacebookPlace FacebookPlace
		{
			get
			{
				return this._FacebookPlace.Entity;
			}
			set
			{
				FacebookPlace previousValue = this._FacebookPlace.Entity;
				if (((previousValue != value) 
							|| (this._FacebookPlace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacebookPlace.Entity = null;
						previousValue.FacebookEvents.Remove(this);
					}
					this._FacebookPlace.Entity = value;
					if ((value != null))
					{
						value.FacebookEvents.Add(this);
						this._Place = value.Id;
					}
					else
					{
						this._Place = default(Nullable<long>);
					}
					this.SendPropertyChanged("FacebookPlace");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacebookPhoto")]
	public partial class FacebookPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _Id;
		
		private string _Name;
		
		private int _Height;
		
		private int _Width;
		
		private System.Nullable<long> _Contact;
		
		private System.Nullable<long> _Location;
		
		private System.DateTime _TimeCreated;
		
		private System.Nullable<System.DateTime> _TimeUpdated;
		
		private string _Comments;
		
		private string _Tags;
		
		private System.Nullable<long> _Album;
		
		private EntitySet<FacebookAlbum> _FacebookAlbums;
		
		private EntityRef<FacebookAlbum> _FacebookAlbum;
		
		private EntityRef<FacebookContact> _FacebookContact;
		
		private EntityRef<FacebookPlace> _FacebookPlace;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(long value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnHeightChanging(int value);
    partial void OnHeightChanged();
    partial void OnWidthChanging(int value);
    partial void OnWidthChanged();
    partial void OnContactChanging(System.Nullable<long> value);
    partial void OnContactChanged();
    partial void OnLocationChanging(System.Nullable<long> value);
    partial void OnLocationChanged();
    partial void OnTimeCreatedChanging(System.DateTime value);
    partial void OnTimeCreatedChanged();
    partial void OnTimeUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeUpdatedChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnTagsChanging(string value);
    partial void OnTagsChanged();
    partial void OnAlbumChanging(System.Nullable<long> value);
    partial void OnAlbumChanged();
    #endregion
		
		public FacebookPhoto()
		{
			this._FacebookAlbums = new EntitySet<FacebookAlbum>(new Action<FacebookAlbum>(this.attach_FacebookAlbums), new Action<FacebookAlbum>(this.detach_FacebookAlbums));
			this._FacebookAlbum = default(EntityRef<FacebookAlbum>);
			this._FacebookContact = default(EntityRef<FacebookContact>);
			this._FacebookPlace = default(EntityRef<FacebookPlace>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(512)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Height", DbType="Int NOT NULL")]
		public int Height
		{
			get
			{
				return this._Height;
			}
			set
			{
				if ((this._Height != value))
				{
					this.OnHeightChanging(value);
					this.SendPropertyChanging();
					this._Height = value;
					this.SendPropertyChanged("Height");
					this.OnHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Width", DbType="Int NOT NULL")]
		public int Width
		{
			get
			{
				return this._Width;
			}
			set
			{
				if ((this._Width != value))
				{
					this.OnWidthChanging(value);
					this.SendPropertyChanging();
					this._Width = value;
					this.SendPropertyChanged("Width");
					this.OnWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contact", DbType="BigInt")]
		public System.Nullable<long> Contact
		{
			get
			{
				return this._Contact;
			}
			set
			{
				if ((this._Contact != value))
				{
					if (this._FacebookContact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnContactChanging(value);
					this.SendPropertyChanging();
					this._Contact = value;
					this.SendPropertyChanged("Contact");
					this.OnContactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="BigInt")]
		public System.Nullable<long> Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					if (this._FacebookPlace.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeCreated", DbType="DateTime NOT NULL")]
		public System.DateTime TimeCreated
		{
			get
			{
				return this._TimeCreated;
			}
			set
			{
				if ((this._TimeCreated != value))
				{
					this.OnTimeCreatedChanging(value);
					this.SendPropertyChanging();
					this._TimeCreated = value;
					this.SendPropertyChanged("TimeCreated");
					this.OnTimeCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeUpdated
		{
			get
			{
				return this._TimeUpdated;
			}
			set
			{
				if ((this._TimeUpdated != value))
				{
					this.OnTimeUpdatedChanging(value);
					this.SendPropertyChanging();
					this._TimeUpdated = value;
					this.SendPropertyChanged("TimeUpdated");
					this.OnTimeUpdatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(MAX)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tags", DbType="VarChar(MAX)")]
		public string Tags
		{
			get
			{
				return this._Tags;
			}
			set
			{
				if ((this._Tags != value))
				{
					this.OnTagsChanging(value);
					this.SendPropertyChanging();
					this._Tags = value;
					this.SendPropertyChanged("Tags");
					this.OnTagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Album", DbType="BigInt")]
		public System.Nullable<long> Album
		{
			get
			{
				return this._Album;
			}
			set
			{
				if ((this._Album != value))
				{
					if (this._FacebookAlbum.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAlbumChanging(value);
					this.SendPropertyChanging();
					this._Album = value;
					this.SendPropertyChanged("Album");
					this.OnAlbumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookPhoto_FacebookAlbum", Storage="_FacebookAlbums", ThisKey="Id", OtherKey="Cover")]
		public EntitySet<FacebookAlbum> FacebookAlbums
		{
			get
			{
				return this._FacebookAlbums;
			}
			set
			{
				this._FacebookAlbums.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookAlbum_FacebookPhoto", Storage="_FacebookAlbum", ThisKey="Album", OtherKey="Id", IsForeignKey=true)]
		public FacebookAlbum FacebookAlbum
		{
			get
			{
				return this._FacebookAlbum.Entity;
			}
			set
			{
				FacebookAlbum previousValue = this._FacebookAlbum.Entity;
				if (((previousValue != value) 
							|| (this._FacebookAlbum.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacebookAlbum.Entity = null;
						previousValue.FacebookPhotos.Remove(this);
					}
					this._FacebookAlbum.Entity = value;
					if ((value != null))
					{
						value.FacebookPhotos.Add(this);
						this._Album = value.Id;
					}
					else
					{
						this._Album = default(Nullable<long>);
					}
					this.SendPropertyChanged("FacebookAlbum");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookContact_FacebookPhoto", Storage="_FacebookContact", ThisKey="Contact", OtherKey="Id", IsForeignKey=true)]
		public FacebookContact FacebookContact
		{
			get
			{
				return this._FacebookContact.Entity;
			}
			set
			{
				FacebookContact previousValue = this._FacebookContact.Entity;
				if (((previousValue != value) 
							|| (this._FacebookContact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacebookContact.Entity = null;
						previousValue.FacebookPhotos.Remove(this);
					}
					this._FacebookContact.Entity = value;
					if ((value != null))
					{
						value.FacebookPhotos.Add(this);
						this._Contact = value.Id;
					}
					else
					{
						this._Contact = default(Nullable<long>);
					}
					this.SendPropertyChanged("FacebookContact");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacebookPlace_FacebookPhoto", Storage="_FacebookPlace", ThisKey="Location", OtherKey="Id", IsForeignKey=true)]
		public FacebookPlace FacebookPlace
		{
			get
			{
				return this._FacebookPlace.Entity;
			}
			set
			{
				FacebookPlace previousValue = this._FacebookPlace.Entity;
				if (((previousValue != value) 
							|| (this._FacebookPlace.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacebookPlace.Entity = null;
						previousValue.FacebookPhotos.Remove(this);
					}
					this._FacebookPlace.Entity = value;
					if ((value != null))
					{
						value.FacebookPhotos.Add(this);
						this._Location = value.Id;
					}
					else
					{
						this._Location = default(Nullable<long>);
					}
					this.SendPropertyChanged("FacebookPlace");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacebookAlbums(FacebookAlbum entity)
		{
			this.SendPropertyChanging();
			entity.FacebookPhoto = this;
		}
		
		private void detach_FacebookAlbums(FacebookAlbum entity)
		{
			this.SendPropertyChanging();
			entity.FacebookPhoto = null;
		}
	}
}
#pragma warning restore 1591
